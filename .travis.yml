language: cpp
script: cmake
sudo: false

matrix:
    include:
        # Clang
        - env: CLANG_VERSION=3.4 BUILD_TYPE=Debug ASAN=on LIBCXX=on
          os: linux
          compiler: clang
          addons: &clang34
            apt:
              packages:
                - g++-4.9
                - valgrind
              sources:
                - ubuntu-toolchain-r-test

        - env: CLANG_VERSION=3.4 BUILD_TYPE=Debug ASAN=on LIBCXX=off
          os: linux
          compiler: clang
          addons: *clang34

        - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug ASAN=on LIBCXX=on
          os: linux
          compiler: clang-3.7
          addons: &clang37
            apt:
              packages:
                - clang-3.7
                - valgrind
              sources:
                - ubuntu-toolchain-r-test
                - llvm-toolchain-precise-3.7

        - env: CLANG_VERSION=3.7 BUILD_TYPE=Debug ASAN=on LIBCXX=off
          os: linux
          compiler: clang-3.7
          addons: *clang37

        - env: GCC_VERSION=4.9 BUILD_TYPE=Debug ASAN=off LIBCXX=off
          os: linux
          compiler: gcc-4.9
          addons: &gcc49
            apt:
              packages:
                - g++-4.9
                - valgrind
              sources:
                - ubuntu-toolchain-r-test

        - env: GCC_VERSION=4.8 BUILD_TYPE=Debug ASAN=off LIBCXX=off
          os: linux
          compiler: gcc-4.8
          addons: &gcc48
            apt:
              packages:
                - g++-4.8
                - valgrind
              sources:
                - ubuntu-toolchain-r-test


        - env: GCC_VERSION=4.7 BUILD_TYPE=Debug ASAN=off LIBCXX=off
          os: linux
          compiler: gcc-4.7
          addons: &gcc47
            apt:
              packages:
                - g++-4.7
                - valgrind
              sources:
                - ubuntu-toolchain-r-test

        - env: GCC_VERSION=4.6 BUILD_TYPE=Debug ASAN=off LIBCXX=off
          os: linux
          compiler: gcc-4.6
          addons: &gcc46
            apt:
              packages:
                - g++-4.6
                - valgrind
              sources:
                - ubuntu-toolchain-r-test

install:
    - export CHECKOUT_PATH=`pwd`;
    - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
    - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
    - if [ "$CLANG_VERSION" == "3.4" ]; then export CXX="/usr/local/clang-3.4/bin/clang++" CC="/usr/local/clang-3.4/bin/clang"; fi
    - export CXX_FLAGS="-Wall -Wextra -Werror"
    # Setup deps directory
    - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
    - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}
    # Install cmake
    - CMAKE_URL="http://www.cmake.org/files/v3.3/cmake-3.3.1-Linux-x86_64.tar.gz"
    - mkdir cmake && travis_retry wget --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
    - export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    # Show compiler info
    - $CXX --version
    - which $CXX
    - $CC --version
    - which $CC
    # Install libc++
    - if [[ "${CLANG_VERSION}" == "3.4" ]]; then LLVM_VERSION="3.4.2"; fi
    - if [[ "${CLANG_VERSION}" == "3.5" ]]; then LLVM_VERSION="3.5.2"; fi
    - if [[ "${CLANG_VERSION}" == "3.6" ]]; then LLVM_VERSION="3.6.2"; fi
    - if [[ "${CLANG_VERSION}" == "3.7" ]]; then LLVM_VERSION="3.7.0"; fi
    - LLVM_URL="http://llvm.org/releases/${LLVM_VERSION}/llvm-${LLVM_VERSION}.src.tar.xz"
    - LIBCXX_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxx-${LLVM_VERSION}.src.tar.xz"
    - LIBCXXABI_URL="http://llvm.org/releases/${LLVM_VERSION}/libcxxabi-${LLVM_VERSION}.src.tar.xz"
    - if [ "$LIBCXX" = "on" ]; then mkdir -p llvm llvm/build llvm/projects/libcxx llvm/projects/libcxxabi; fi
    - if [ "$LIBCXX" = "on" ]; then travis_retry wget --quiet -O - ${LLVM_URL} | tar --strip-components=1 -xJ -C llvm; fi
    - if [ "$LIBCXX" = "on" ]; then travis_retry wget --quiet -O - ${LIBCXX_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxx; fi
    - if [ "$LIBCXX" = "on" ]; then travis_retry wget --quiet -O - ${LIBCXXABI_URL} | tar --strip-components=1 -xJ -C llvm/projects/libcxxabi; fi
    - if [ "$LIBCXX" = "on" ]; then (cd llvm/build && cmake .. -DCMAKE_INSTALL_PREFIX=${DEPS_DIR}/llvm/install -DCMAKE_CXX_COMPILER=clang++); fi
    - if [ "$LIBCXX" = "on" ]; then (cd llvm/build/projects/libcxx && make install -j2); fi
    - if [ "$LIBCXX" = "on" ]; then (cd llvm/build/projects/libcxxabi && make install -j2); fi

script:
    - cd $CHECKOUT_PATH
    - if [ ! -d build ]; then mkdir build; fi
    - cd build
    - if [ "$ASAN" == "on"]; then export CXX_FLAGS="${CXX_FLAGS} -fsanitize=address,undefined,integer -fno-omit-frame-pointer -fno-sanitize=unsigned-integer-overflow"; fi
    - if [ "$LIBCXX" = "on" ]; then CXX_FLAGS="${CXX_FLAGS} -stdlib=libc++ -I${DEPS_DIR}/llvm/install/include/c++/v1"; fi
    - if [ "$LIBCXX" = "on" ]; then CXX_LINKER_FLAGS="${CXX_FLAGS} -L${DEPS_DIR}/llvm/install/lib -lc++ -lc++abi"; fi
    - cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" -DCMAKE_EXE_LINKER_FLAGS="${CXX_LINKER_FLAGS}" ..
    - CTEST_OUTPUT_ON_FAILURE=1 CTEST_PARALLEL_LEVEL=2 make -j2 check VERBOSE=1
    - cd .. && rm -rf build/

